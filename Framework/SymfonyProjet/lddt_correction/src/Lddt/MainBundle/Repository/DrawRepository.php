<?php

namespace Lddt\MainBundle\Repository;

/**
 * DrawRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class DrawRepository extends \Doctrine\ORM\EntityRepository
{
    public function findAllDraws($is_online = true) {
        // SELECT * FROM draw as D LEFT JOIN category as C on d.id_categroy = C.id
        $q = $this->getEntityManager()
            ->createQuery("SELECT d,c FROM LddtMainBundle:Draw d INNER JOIN d.category c 
WHERE d.isOnline = $is_online");
        return $q->getResult();
    }

    public function findAllDrawsByCat($category) {
        $q = $this->createQueryBuilder('d')
                  ->join('d.category', 'c')
                  ->join('d.author','a')
                  ->where('d.category = :cat')
                  ->andWhere('d.isOnline = true')
                  ->setParameter('cat',$category)
                  ->addSelect('c','a')
                  ->orderBy('d.createdAt','DESC');
        return $q->getQuery()->getResult();
    }

    public function findAllDrawsByAuthor($user) {
        $q = $this->createQueryBuilder('d')
            ->join('d.category','c')
            ->join('d.author','a')
            ->where('d.author = :author')
            ->andWhere('d.isOnline = true')
            ->setParameter('author',$user)
            ->addSelect('c','a')
            ->orderBy('d.createdAt',"DESC");
        return $q->getQuery()->getResult();
    }

    public function findAllDrawsByColor( array $colors) {
        $q = $this->createQueryBuilder('d');
        $q->join('d.colors','colors')
        ->join('d.category','cat')
        ->where($q->expr()->in('colors.name',$colors))
        ->andWhere('d.isOnline = true')
        ->addSelect('colors','cat');
        return $q->getQuery()->getResult();

    }


}

